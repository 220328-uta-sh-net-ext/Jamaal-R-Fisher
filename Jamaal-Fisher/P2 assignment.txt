Project 2 guidelines

Doing the steps of SDLC to come up with a reasonable P2 project

Plan
Find a problem and come up with a solution to solve it using the tools given to you or any experience you want to utilize
It doesn’t have to be a problem; you can also come up with creating an application that is P2 worthy
Ex:
P2 project utilizing websocket.io to create a live multiplayer session game(s) in their website
P2 project that solves a specific problem:
Healthcare profession needs to automate certain things in their daily lives by utilizing some website
Education professions needs a website to easily explain some topic either through some simplified game to explain physics, algebra, biology, music (whatever topic)
Etc.
P2 project that emulates a social media type of application that have live chats, posts, to do list, etc.
P2 project utilizing canvas api to create a drawing application that emulates Pictionary game
Research any external api you might need to solve your problem or what your application might need
Be risk takers, you’ll probably have requirements you can’t complete and that’s completely fine. It is more impressive to use a tech you never learned but only use it in the simplest form vs. someone who just copied and pasted a Restaurant app.
You have more people, be sure to utilize everyone to accomplish big tasks
Have certain people research specific things about the project and have them present during standup on what they found and make a group decision to either pursue it or not

Project Requirements
After researching all the cool things, you want to do with the application, it is time to put it on an actual real accomplishment.
Don’t do this step until everyone agrees on an actual plan first.
Now every comes up with realistic steps to get your idea working
Ex:
If you do a social media app
User can create an account
User can login as that account after verifying their email
User can be able to post
User can be able to find friend
User can accept friend invites
Etc.

Product Architecture
Think of the tech stack you’ll need and if you do research and found necessary tech stack, be sure to include it here as well.
It should be under “Tech Stack” on the P2 proposal.

Building/Developing the product
The biggest time spent for your P2.
You need to conduct standup everyday to see where everyone is and see if there are any blockers that needs to be addressed by everyone.
Communicate is key.
Kanban board to see if your project requirements are being met and how many more is needed to be done and see how much someone has contributed to the project. Ex: Trello, monday.com, azure boards etc...

Testing the application
SETUP A PIPELINE EARLY
A pipeline will just tell you any early warnings if you can’t even deploy the application
A lot of setups needed but trust me it is worth it
You have two servers now and they both need to be deployed to work correctly
Of course, have actual unit tests to make sure whatever you wrote in the BL works so that the frontend team doesn’t go “why isn’t this working everything looks fine?!” only to figure out after 2-3 days wasted that it was the backend teams’ fault, but a nice unit test would just help isolate who’s fault it really is.

Deployment
Taken care of by CI/CD just manually test it to see if it all works
Give it to team/family members and see if they can mess it up by doing something you never ever expect them to do (and they will do something you will never expect)
Don’t give it to strangers online… they have the tendency to make it a challenge to break it.

Where does your trainer come in to all this?
We don’t!
This is your project and you’ll be doing things I won’t expect.
Your team is the best resource you have since your problem is their problem and my one brain cannot outwit 4 brains.
The only time I come in is as your manager and to do conflict resolution if someone isn’t pulling their own weight.
I will do standups every Wednesday to see how each team is going with their project (remind me please I have a memory of a goldfish)
You will have your own team but there are many scenarios when a team figures out a new tech stack and they share the knowledge and now everyone has that tech stack and that will all benefit you guys since coming P3 you all work together.

Technologies used
ASP.NET core, Entity Framework,
Docker, Github Actions, Git,
C#, Sql
Angular, TypeScript, Node.js,
Karma, Jasmine, Protractor,
HTML, CSS, JavaScript



Model Setup 										4/14/2022  1:42 pm recording @2:02:00
Repository Interface and Database Folder						4/18/2022
Testing											4/19/2022
Code Coverage and Logging								4/20/2022  (averaging reviews is business logic, ....  is data logic)
LINQ / SOLID										4/21/2022
Azure/SQL Server set up									4/22/2022
Liskov substitution/dependency inversion principles/SQL Query/Nuget			4/25/2022
Creating Tables										4/26/2022
Working with queries in a SQL Database in Azure						4/27/2022 - 4/28/2022
DML and Constraints									4/28/2022  (recording after 2:30pm is manipulating Pokemon tables, then SQLConnection)
Normalization (and Pokemon dependency inversion)					4/29/2022
P0 Presentations									5/3/2022   (Kevin, Harsh, Vladimir, Sean, Briceson, Marcos, Leo, Gabriel, Jermaine)

___________________________________________________________________________________________________________________________________________________________


P1 intro										5/4/2022
Exploring API in Visual Studio, Postman, & Swagger (API vs MVC project file)		5/5/2022    (API = BL, Swagger = UI  ???)
Model Building/Parameter Building, XML Serializing in Postman, API Consuming	 	5/6/2022    (System.Runtime.Caching, Microsoft.AspNet.WebApi.Client)
Delegates and LINQ									5/9/2022
Team Development									5/10/2022
Cloud Computing / Docker Engine and setup						5/11/2022
Docker Container commands and instructions						5/12/2022
Web API service setup									5/13/2022
P1 Presentations									5/17/2022

_______________________________________________________________________________

P2 intro/exploring Docker workflows with YAML file in GitHub, SonarCloud		5/18/2022
HTML and CSS intro									5/19/2022
Javascript										5/20/2022
intro to ORM and EF Core								5/23/2022
Node.js, Typescript, Angular								5/24/2022
Data Binding, Services, Dependency Injection						5/25/2022
Pipes, Routing, Observables								5/26/2022
P2 Presentations									6/1/2022	(Alchemy, Vanquish, Amplifire, Synergy)


__________________________________________________________________________________


1. Git workflow
- Product backlog
- Sprints - 2 or 1
- Tracking system - Trello, Monday.com, Azure Boards
- Daily Stand Up (what has been worked, what are we going to work and impedements/blocker)

2. CI Pipeline
	- Git Workflow
		- main/master  --->  CI pipeline
			- feature-useraccount
			- feature-integrate api
			- feature-something
(pull request to the master, test, if approved then merge)

avoid multiple merges and merge conflicts.



Companies' Work Flow

dev -->  test  ---->  staging  ---->  main ----> hotfix


____________________________________________________________________________





The spoonacular Nutrition, Recipe, and Food API allows you to access over 365,000 recipes and 86,000 food products.
Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as “gluten free brownies without sugar” or “low fat vegan cupcakes.”
You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what’s in your fridge,
find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan.
With our powerful API, you can create many kinds of food and especially nutrition apps.

Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, low sodium, low carb, Paleo, Primal, ketogenic, FODMAP, and Whole 30.
We will soon be adding Weight Watcher points, too.


__________________________________________________________________________________

Jamaal, introducing for Team Amplifire:

including myself,
Gabriel,
our Scrum Master, Marcos,
and our Team Leader, Harsh

just wanna start with just a quick question for the class and everyone in attendance, by show of hands:
does anyone here consider themselves to be a "foodie"?  either you're passionate about food recipes or, like myself, like to try every possible food that is out there, from many different cultures.

is anyone here on a diet? or consider themselves to be a "picky eater"?  let's say you've given yourself strict guidelines on what you can and can't eat, or maybe you know what you like and don't want too much more than that.

that's alright.  no matter your cravings, come on down to Parlez Entree, that's right Parlez Entree!

(parlez is the French verb meaning "to speak or talk", entree is derived from the French verb meaning "to enter", but in English we know it as a dish served as the main course of a meal.)

so just enter our website, login, enter your ingredients, enter your nutrition guidelines, and we'll talk dinner!

we've developed a library that allows you to access over 350 thousand recipes with a variety of over 80 thousand food products.

with our nutrition API, our search engine becomes a personalized ontology of your food preferences using keyword queries, whatever ingredients your heart follows.

you can also set a range finder of calories, protein, fat, and carbohydrates.  need to trim down?  just limit the calorie or fat ranges.  need to bulk up?  increase the protein range.

we also have a "jokes and trivia" section where you can enjoy a few laughs or learn some new fun facts that you wouldn't have known otherwise.


Tech Stack:

for backend:
C#, SQL, ASP.NET, Entity framework with database first approach,
unit testing, sonar cloud, Ci/Cd pipeline, docker

for front end:
html, css, typescript, angular

for uploading application, azure

to collaborate between team member git, thru github


next up, I'll have our scrum master Marcos break down our brainstorming process and workflow......


*** The Database First Approach provides an alternative to the Code First and Model First approaches to the Entity Data Model.
It creates model codes (classes, properties, DbContext etc.) from the database in the project and those classes become the link between the database and controller.




after Marcos, home page, random search.....


made an angular component, started w/ html, then css, then ts

within the component decorator, I declared 2 observables and used the ngOnInIt method to establish my front end business logic

fully utilize the dependency injection by calling the service outside of that component from the injectable decorator in jokeandtrivia.service.ts file

here I'm able to consume the API from the respective HTTP headers:  one for jokes, one for trivia.


initialize the directive or component after Angular first displays the data-bound properties and sets the directive or component's input properties. See details in Initializing a component or directive in this document.


next up, I'll have our team leader Harsh break down our ingredients and nutrition page......



____________________________________________________________________________________



underground library.  collects your Top 5 favorite artists, based on their background, era, multi-genre sounds, collaborations, it'll give you a recommendation for the day.  can randomize playlist suggestions based on your favorite albums.


a how-to troubleshooting app, depending on the task at home. lists tools needed, resources needed.


finds the nearest support and resistance levels of a crypto chart, depending on the timeframe, and a basic-level recommendation and risks.


Amplifire - P2 due May 31/June 1




{
  "timestamp": 1513173506,
  "bids": [
    [
      17670.3,
      0.00250037
    ]
  ],
  "asks": [
    [
      17689.66,
      0.01
    ]
  ],
  "pair": "BTC:USD",
  "id": 158217212,
  "sell_total": "1299.73578729",
  "buy_total": "10006393.37"
}


height


health conditions/allergies


database

type of plant
	-requirements: (soil type, water, etc.)

user location
-	-climate: (soil type, water, etc.)


______________________________________________________________

front end

package - Live Server 5.1.1 (Ritwick Dey)

create new folder --- >  new file called index.html  ---->  hit ! then tab





______________________________________________________________


gardening

	
	-make database for plants / spend more time research 

		* plant [name] [plant id] [zone id] [sun light] [soil id] [grow time] [room to grow] [how tall] [water id] [ok, love or hate id]
		* water id [water id] value {[water daily] or [water ever two day] or [water one a week] } [number of gallon of water]
		* plant level [plant id] 
		*love id [plant id] [plant id] [plant id] [plant id]
		* hate id [plant id] [plant id] [plant id] [plant id]
		* ok id [plant id] [plant id] [plant id] [plant id]
		* soil id [type a ] [type b] [type c] [type d]

	-make database for bugs / spend time if we should
		* bug [name] [bad for plant id]


step 1: make a database 
step 2: connect to the database PlantModel() and PlantDL()
step 3: functionality BL()
	1. get user zone from the api GetUserZone()
	2. use given zone to out put recommended plants RecommendedPlants(GetUserZone()) ---Just out put a list of all plants--
		* [name]
		* [id: all plants have a global id]
		* [level: how hard or easy it is to grow]
		* [how long it take to grow form seed]
		* [how long it take to produces]
	3. get user choice of plant api GetUserPlantOfChoice()
	4. use (3) to output plant data PlantRequest(GetUserPlantOfChoice())  --- just out put the plants data ---
		* [name]
		* [id]
		* [level]
		* [Full Sun/ Low Sun / Half ]
		* [seeding time]
		* [produce time]
		* Function WaterAWeek() 
			+ output number of gallon needed in a week to do grate
			+ output number of gallon needed in a week to do ok
			+ output number of gallon needed in a week be near death but alive
		* Function PlantDatingProfile ()
			+ plant it love to be with
			+ plant it ok to be with
			+ plant it hate to be with or die becuase of it
		* Function PlantPestOrPets()
			+ insects that helps the plant 
			+ insects that kill the plant
		* Function PlantAreaSpace()
			+ Pot size "if growing in a pot"
			+ Space Between Other Plants
	5. get user soil quality api GetUserSoilQuality()
	6. use (5 and 3) to compare {soil quality} with {soil needed} PlantSoilCompare(GetUserPlantOfChoice(),GetUserSoilQuality())
		* out if grate, good, ok, bad, or "how is anything even alive"
		* how to fix tips
	7. so on...

__________________________________________________________________________________________________________

# Parlez Entree - website
## Amplifire
- Harsh Tamakuwala
- Marcos Fonseca
- Gabriel Garcia
- Jamaal Fisher

## Project Synopsis
- Overview
    -  Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as “gluten free brownies without sugar” or “low fat vegan cupcakes.” You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what’s in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.

    - Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, low sodium, low carb, Paleo, Primal, ketogenic, FODMAP, and Whole 30. We will soon be adding Weight Watcher points, too.

## Tech Stack 
- Backend
    - C#
    - Sql
    - .Net 6
    - Asp.Net core web api
    - ADO.Net/Entity Framework Core    
- Infra
    - Git
    - Docker
    - Azure Sql Databases
    - Azure App Service
    - Github Actions
    - Github Secrets
    - Sonar Cloud
- Code Quality
    - XUnit
    - Sonar Cloud
- FrontEnd
    - HTML
    - CSS
    - JavaScript
    - Angular
    - TypeScript
- external api
    - spoonacular API


## Functionality
- create user/register
- Get Random Recipes(Taste by ID)
- Search Recipes by Nutrients(Get Recipe Information,Taste by ID)
- Search Recipes by Ingredients(Get Recipe Information,Taste by ID)
- Wine Pairing
- Wine Recommendation
- Search Food Videos
- Random Food Joke , Random Food Trivia
- save recipes


https://spoonacular.com/food-api/docs#Random-Food-Joke


https://spoonacular.com/food-api/docs#Random-Food-Trivia


https://azure.microsoft.com/en-us/free/


parlezentreeapi
harshrevature/parlezentree

index.html



image source
docker hub
image and tag ---->  copy from docker repo


copy URL

URL/swagger/index.html

________________________________________________________________________


#F6F0F0
#60E3D5
#0567A8




after you fork you repo...

Branch
1) git checkout -b "new-branch" -＞simultaneously creates and checks out
2) git add .
3) git commit -m "note" -> Commit the files to local repo
4) git push origin branch-name -> Upload to Github
5) git checkout main
6) git merge branch-name
7) git push origin main -> Upload to Github





<publishData><publishProfile profileName="parlezentreeapi - Web Deploy" publishMethod="MSDeploy" publishUrl="parlezentreeapi.scm.azurewebsites.net:443" msdeploySite="parlezentreeapi" userName="$parlezentreeapi" userPWD="7bcDmshoRajz3Hw8HLeMrRyoknxmQFNNrX8D1cA9R2jqBlq21tgr97duSBtl" destinationAppUrl="http://parlezentreeapi.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="parlezentreeapi - FTP" publishMethod="FTP" publishUrl="ftp://waws-prod-dm1-299.ftp.azurewebsites.windows.net/site/wwwroot" ftpPassiveMode="True" userName="parlezentreeapi\$parlezentreeapi" userPWD="7bcDmshoRajz3Hw8HLeMrRyoknxmQFNNrX8D1cA9R2jqBlq21tgr97duSBtl" destinationAppUrl="http://parlezentreeapi.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="parlezentreeapi - Zip Deploy" publishMethod="ZipDeploy" publishUrl="parlezentreeapi.scm.azurewebsites.net:443" userName="$parlezentreeapi" userPWD="7bcDmshoRajz3Hw8HLeMrRyoknxmQFNNrX8D1cA9R2jqBlq21tgr97duSBtl" destinationAppUrl="http://parlezentreeapi.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile></publishData>







_________________________________________________________________________________________

what's a shoe made out of a banana called?  (a slipper)

why did the pancake get arrested? (it committed multiple un-waffle actions)

do vegetable puns make you feel good?  (well, they make me feel good.  from my head, tomatoes)

you want to hear a joke about pizza?  (eh, never mind.  it's too cheesy)

what was the snowman doing outside in the garden?  (picking his nose)

what did one plate say to the other plate?  (dinner's on me)

what type of nut always seems to have a cold?  (a cashew)



________________________________________________________________________________________



What nutrient do you get from the meat, poultry, eggs, and fish?
Protein

What are cruciferous vegetables?  And can you name some examples?
Vegetables in the cabbage family, such as cauliflower, cabbage, kale, garden cress, bok choy, broccoli, and Brussels sprouts.  They are high in vitamin C and soluble fiber and contain multiple nutrients and phytochemicals.

What element, whose symbol is Ca, is needed to keep bones healthy and strong?
Calcium

What is the most important meal of the day?
Breakfast

How do you know if juice is made from real fruit?
The label says 100 percent fruit juice

How much of your plate should you fill with fruits and veggies?
1/2

What red food is actually a fruit and not a veggie?
Tomato

What is the only fruit to have seeds on the outside?
Strawberry

What is the grain-like food grown principally in the Andes Mountains that is high in protein and is a great source of B vitamins and fiber?
Quinoa

What bean that originated in East Asia is used for miso, oil, and tofu?
Soybean

What are lactobacillus, acidophilus, and bifidobacterium?
Probiotics

What is the abnormal enlargement of the thyroid gland due to deficiency of iodine called?
Goiter

What yellow seasoning may help with mood stabilization, wound healing, and balancing blood sugar?
Turmeric

What is the name for probiotic rich fermented milk?
Kefir

What spice, frequently used in Hungarian, Indian, and Moroccan food, provides vitamin A and can prevent spider veins and inhibit hair loss?
Paprika

What is the common name for Allium sativum, a food that's been used as both a food flavoring and a traditional medicine?
Garlic

Which fruit contains an enzyme that aids digestion and also helps tenderize meat?
Papaya

Deer meat is known by what name?
Venison

Are humans omnivore, herbivore, or carnivore?
Omnivore

What healthy fat containing food is used as the base of guacamole?
Avocado

Foods rich in starch such as pasta and bread are often known by what word starting with the letter C?
Carbohydrates

What should you have in your diet that may benefit your digestion and reduce your risk of chronic disease?
Fiber

What vitamin gives sweet potatoes and carrots their orange color?
Vitamin A

How often should one eat fish each week?
Two times

What does fruit have that makes it taste sweet?
Fructose

__________________________________________


rgb(43, 100, 131)
dark one

rgb(108,203,241)
one shade light

__________________________



https://parlezentree.azurewebsites.net/




'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/jokes/random',
  headers: {
    'X-RapidAPI-Host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',
    'X-RapidAPI-Key': '5cec28a64fmsh409c42b11206bc8p14eaafjsn1cb2fedef506'
  }
8p14eaafjsn1cb2fedef506'
  }


'https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/food/trivia/random',
  headers: {
    'X-RapidAPI-Host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',
    'X-RapidAPI-Key': '5cec28a64fmsh409c42b11206bc8p14eaafjsn1cb2fedef506'
  }
_______________________________________________________________________




20,25,30 mins = roughly 3.5 mins each


1st Parlez Entrée Overview: @Jamaal Fisher  (Introducing group member, tell the functionality, etc)
2nd Layout brainstorm and workflow: @Marcos Fonseca  (How we created the layout and how we split each member assignment);
3rd Backend: @Harsh4598  (API, Swagger, SonarCloud, etc)
4th Login: @Gabriel P. Garcia  (Show how it works)
5th Home Page (Random + Search): @Marcos Fonseca (Show how it works)
6th Jokes Page: @Jamaal Fisher  (Show how it works)
7th Ingredients and Nutrition Page: @Harsh4598  (Show how it works)
8th Open for Questions: All group members.
