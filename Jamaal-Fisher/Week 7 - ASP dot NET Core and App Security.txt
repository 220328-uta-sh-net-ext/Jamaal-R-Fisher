Each year OWASP (the Open Web Application Security Project) publishes the top ten security vulnerabilities.
It represents a broad consensus about the most critical security risks to web applications.


TOP 10 WEB APPLICATION SECURITY RISKS
1. Broken Access Control
2. Cryptographic Failures
3. Injection
4. Insecure Design
5. Security Misconfiguration
6. Vulnerable and Outdated Components
7. Identification and Authentication Failures
8. Software and Data Integrity Failures
9. Security Logging and Monitoring Failures
10. Server-Side Request Forgery



Authentication is user's identity (username and password)
Authorization is access level to resources for User (like admin have all access but employee might have limited access)



User   --->  App Server  --->  Identity Providers

___________________________________________________________

Microsoft.AspNetCore.Authentication.JwtBearer

System.IdentityModel.Tokens.Jwt

_____________________________________________________________


Security of Web API

JWT (JSON Web Token)

IDaaS (Identity as a Service)


___________________________________________________________


var Config=builder.Configuration;

// Add services to the container.
//boiler plate code to configure security with JWT

builder.Services.AddAuthentication(options => {
    options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;
    options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;

}).AddJwtBearer(o => {
    var key = Encoding.UTF8.GetBytes(Config["JWT:Key"]);
    o.SaveToken = true;
    o.TokenValidationParameters = new TokenValidationParameters
    {
        ValidateIssuerSigningKey = true,
        ValidIssuer = Config["JWT:Issuer"],
        ValidAudience = Config["JWT:Audience"],
        IssuerSigningKey = new SymmetricSecurityKey(key),
        ValidateLifetime = true,
        ValidateIssuer = true,
        ValidateAudience = true
    };
});



__________________________________________________________________


SDLC  ->  Software development life cycle

Phases:
1. requirement analysis
2. design
3. development
4. testing
5. deployment
6. maintenance

Models:
Waterfalls
Extreme Programming
Agile

Big Bang - where most developers begin (the explosive methodology)
Waterfall - the classic methodology (clear, well defined steps.  makes changes difficult as it moves forward)
Agile - the modern methodology (design, develop, deploy in several iteration cycles) (allows team to quickly respond to change.  increased flexibility can lead to bad behaviors, requires more knowledge to use properly)


product backlog
sprint planning
sprint backlog
backlog refinement (daily standup, sprint)
review
retrospective



scrum (makes it easier to find and rectify mistakes.  constant feedback)  (lacks firm final deadlines which can result in feature creep.  lacks a firm time limit and cost valuations.)
kanban (event-driven instead of timeboxed.  allows for specialists.)  (easy to become overcomplicated)
scrumban


user epics - identify unique sets of user stories, and combine them into epics.

paired programming is the process of two developers working on a specific piece of code or feature together.  pilot and navigator.

story points are used to help give us an estimate.

velocity is the number of story points completed in a sprint.

___________________________________________________________________________________


DevOps Definition, CI and CD
